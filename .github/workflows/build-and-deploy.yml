name: build-and-deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  DOTNET_VERSION: '6.0.x'
  AZURE_FUNCTIONAPP_NAME: 'ffunc'
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '${{ github.workspace }}/src'
  BUILD_OUTPUT_PATH: '${{ github.workspace }}/src/output'
  BUILD_PACKAGE_NAME: 'az-func.zip'

defaults:
  run:
    shell: bash

jobs:
  lint-bicep:
    runs-on: ubuntu-latest

    steps:
      - name: Dotenv Action
        id: dotenv
        uses: falti/dotenv-action@v0.2.7

      - name: show dotenv
        run: echo ${{ steps.dotenv.outputs }}

      - name: 'Checkout source code'
        uses: actions/checkout@v2

      - name: 'Lint Bicep source'
        run: ./scripts/lint-bicep.sh

  lint-bash:
    runs-on: ubuntu-latest

    steps:
      - name: 'Checkout source code'
        uses: actions/checkout@v2

      - name: 'Lint bash scripts'
        run: |
          shellcheck scripts/*.sh

  build-azure-infrastructure:
    runs-on: ubuntu-latest
    needs: [lint-bicep, lint-bash]

    steps:
      - name: 'Checkout source code'
        uses: actions/checkout@v2

      - name: 'Login to Azure'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 'Setup resource groups'
        run: ./scripts/configure-resource-groups.sh

      - name: 'Setup functions'
        run: ./scripts/configure-functions.sh

  build-deploy-functions:
    runs-on: ubuntu-latest
    needs: build-azure-infrastructure

    steps:
      - name: 'Checkout source code'
        uses: actions/checkout@v2

      - name: 'Login to Azure'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 'Setup .NET Environment'
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
      
      - name: 'Build functions'
        run: |
          cd ./src
          dotnet build

      - name: 'Create distribution'
        run: |
          mkdir -p ${{ env.BUILD_OUTPUT_PATH }}/${{ env.BUILD_PACKAGE_NAME }}
          cd ./src
          dotnet publish --configuration Release --output ${{ env.BUILD_OUTPUT_PATH }}

      - name: 'Bundle distribution'
        run: |
          cd ${{ env.BUILD_OUTPUT_PATH }}/${{ env.BUILD_PACKAGE_NAME }}
          zip -r ${{ env.BUILD_OUTPUT_PATH }}/${{ env.BUILD_PACKAGE_NAME }} .

      - name: Get FunctionApp publish profile
        id: webapp
        uses: aliencube/publish-profile-actions@v1
        env:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
        with:
          resourceGroupName: 'tutorialAzureFunctionsCSharpRG'
          appName: 'ffunc'

      # - name: Show Profile
      #   shell: bash
      #   run: |
      #     echo "WebApp: ${{ steps.webapp.outputs.profile }}"

      - name: 'Publish distribution to Azure'
        uses: azure/functions-action@v1
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          package: ${{ env.BUILD_OUTPUT_PATH }}/${{ env.BUILD_PACKAGE_NAME }}
          publish-profile: ${{ steps.webapp.outputs.profile }}
